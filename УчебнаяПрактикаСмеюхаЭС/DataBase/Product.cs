//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace УчебнаяПрактикаСмеюхаЭС.DataBase
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Windows;
    using System.Windows.Media;
    using УчебнаяПрактикаСмеюхаЭС.Class;

    public partial class Product
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Product()
        {
            this.Order = new HashSet<Order>();
        }
    
        public string ProductArticleNumber { get; set; }
        public string ProductName { get; set; }
        public string ProductDescription { get; set; }
        public int ProductCategory { get; set; }
        public int ProductManufacturer { get; set; }
        public int ProductProvider { get; set; }
        public string ProductPhoto { get; set; }
        public decimal ProductCost { get; set; }
        public Nullable<byte> ProductDiscountAmount { get; set; }
        public int ProductMaxDiscount { get; set; }
        public int ProductQuantityInStock { get; set; }
        public Nullable<int> ProductStatus { get; set; }
        public int ProductUnit { get; set; }
    
        public virtual Category Category { get; set; }
        public virtual ProductManufacturer ProductManufacturer1 { get; set; }
        public virtual ProductStatus ProductStatus1 { get; set; }
        public virtual ProductUnit ProductUnit1 { get; set; }
        public virtual Provider Provider { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Order> Order { get; set; }


        Color _colordiscount = Colors.Black;
        public Color Colordiscount
        {
            get
            {
                return _colordiscount;
            }
        }

        Visibility _vis = Visibility.Collapsed;
        public Visibility VisibilityCost
        {
            get
            {
                return _vis;
            }
        }

        TextDecorationCollection _textDecorations = TextDecorations.Baseline;
        public TextDecorationCollection Decoration
        {
            get
            {
                return _textDecorations;
            }
        }
        int _count = 0;
        public int Count
        {
            get
            {
                return _count;
            }
            set
            {
                if (value != 0)
                {
                    _count = value;
                }
            }
        }
        decimal _price = 0;
        public decimal Price
        {
            get
            {
                decimal pcost = AppData.db.Product.FirstOrDefault(u => u.ProductArticleNumber == ProductArticleNumber).ProductCost;

                return _count * pcost;


            }
            set
            {
                if (value != 0)
                {
                    _price = value;
                }
            }
        }

        public decimal PriceItem
        {
            get
            {
                decimal pcost = AppData.db.Product.FirstOrDefault(u => u.ProductArticleNumber == ProductArticleNumber).ProductCost;
                return pcost;
            }
        }
        public decimal PriceItemD
        {
            get
            {
                decimal t = Discount;
                return t;
            }
        }
        decimal _priceDiscountAll = 0;
        public decimal PriceDiscountAll
        {
            get
            {
                decimal t = PriceDicount;
                return t;
            }
            set
            {
                if (value != 0)
                {
                    _priceDiscountAll = value;
                }
            }
        }

        public decimal PriceDicount
        {
            get
            {
                decimal pcost = AppData.db.Product.FirstOrDefault(u => u.ProductArticleNumber == ProductArticleNumber).ProductCost;
                if (Discount == pcost)
                {

                    return _count * pcost;
                }
                else
                {
                    decimal t = _count * Discount;
                    return t;
                }

            }
        }

        public decimal Discount
        {
            get
            {
                decimal pdiscount = (decimal)AppData.db.Product.FirstOrDefault(u => u.ProductArticleNumber == ProductArticleNumber).ProductMaxDiscount;
                decimal pcost = AppData.db.Product.FirstOrDefault(u => u.ProductArticleNumber == ProductArticleNumber).ProductCost;
                decimal _discount = pcost - (pcost * (pdiscount / 100));

                if (_discount != pcost)
                {
                    _vis = Visibility.Visible;
                    _textDecorations = TextDecorations.Strikethrough;
                }
                else
                {
                    _vis = Visibility.Collapsed;
                    _textDecorations = TextDecorations.Baseline;
                }
                return _discount;
            }
        }


    }
}
